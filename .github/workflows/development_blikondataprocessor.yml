name: Build, Deploy, and Cleanup Artifacts for Azure Web App - blikondataprocessor

on:
  push:
    branches:
      - development
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # Ejecutar semanalmente

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4F805400296A486F8410FF212D3C4CE3 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_AED99D22208748ACB73C7F4E36A2EBB2 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7234063D87974CF2816518E1016C31FA }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: 'blikondataprocessor'
          slot-name: 'Production'

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Fetch and display artifacts from GitHub API
        id: fetch-artifacts
        run: |
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" > artifacts_response.json
          cat artifacts_response.json

      - name: List artifacts
        id: list-artifacts
        run: |
          jq '.artifacts[] | select(.expired == false) | .id' artifacts_response.json > artifact_ids.txt
          cat artifact_ids.txt

      - name: Delete artifacts
        if: success() && steps.list-artifacts.outputs.artifact_ids.txt != ''
        run: |
          for id in $(cat artifact_ids.txt); do
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$id"
          done
